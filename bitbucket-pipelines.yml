definitions:
  steps:
    - step: &ClearCache
        # From: https://bitbucket.org/blog/automatically-refresh-caches-when-build-dependencies-are-updated
        # Limitations:
        # * Caches are currently global and shared across multiple branches. When the cache is invalidated it will clear the cache for all branches, until it is cached again.
        # * Changesets only find files in the last commit, so if multiple commits are pushed, only the last one will be checked for the includePaths section.
        name: Delete all caches if changes in the build dependencies
        script:
          - pipe: atlassian/bitbucket-clear-cache:3.1.1
            variables:
              BITBUCKET_USERNAME: $BITBUCKET_USER_NAME
              BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
        condition:
          changesets:
            includePaths:
              - package-lock.json    
    - step: &Install
        name: Install
        caches:
          - node
        script:
          - npm i
    - step: &Lint
        name: Lint
        caches:
          - node
        script:
          - npm run lint
    - step: &Typecheck
        name: Typecheck
        caches:
          - node
        script:
          - npm run typecheck
    - step: &Build
        name: Build
        caches:
          - node
        script:
          - npm run build
    - step: &Deploy
        name: Deploy
        caches:
          - node
        script:
          - npm run build
          - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          - unzip awscliv2.zip
          - ./aws/install
          - npm i -g @architect/architect
          - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          - npx arc env --add --env $NODE_ENV ARC_APP_SECRET $ARC_APP_SECRET
          - npx arc env --add --env $NODE_ENV AUTH0_CLIENT_ID $AUTH0_CLIENT_ID
          - npx arc env --add --env $NODE_ENV AUTH0_CLIENT_SECRET $AUTH0_CLIENT_SECRET
          - npx arc env --add --env $NODE_ENV AUTH0_DOMAIN $AUTH0_DOMAIN
          - npx arc env --add --env $NODE_ENV AUTH0_CALLBACK_URL $AUTH0_CALLBACK_URL
          - npx arc env --add --env $NODE_ENV CONTENTFUL_API_KEY $CONTENTFUL_API_KEY
          - npx arc env --add --env $NODE_ENV CONTENTFUL_ENV $CONTENTFUL_ENV
          - npx arc env --add --env $NODE_ENV CONTENTFUL_SPACE_ID $CONTENTFUL_SPACE_ID
          - npx arc env --add --env $NODE_ENV NODE_ENV $NODE_ENV
          - npx arc env --add --env $NODE_ENV BASE_URL $BASE_URL
          - npx arc env --add --env $NODE_ENV SESSION_SECRET $SESSION_SECRET
          - npx arc deploy --$NODE_ENV --prune

image: node:16
pipelines:
  branches:
    develop:
      - step: *ClearCache
      - step: *Install
      - step: *Lint
      - step: *Typecheck
      - step: *Build
      - step:
          <<: *Deploy
          name: Deploy to acting-dev
          deployment: acting-dev
    main:
      - step: *ClearCache
      - step: *Install
      - step: *Lint
      - step: *Typecheck
      - step: *Build
      - step:
          <<: *Deploy
          name: Deploy to staging
          deployment: staging
      - step:
          <<: *Deploy
          name: Deploy to Production
          deployment: production
          trigger: manual
